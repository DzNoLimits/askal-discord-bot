const { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, PermissionFlagsBits } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('verificacao')
        .setDescription('Sistema de verifica√ß√£o de regras para DayZ RP')
        .addSubcommand(subcommand =>
            subcommand
                .setName('setup')
                .setDescription('Configura o sistema de verifica√ß√£o')
                .addChannelOption(option =>
                    option
                        .setName('canal')
                        .setDescription('Canal onde ser√° enviado o sistema (padr√£o: canal de regras)')
                        .setRequired(false)
                )
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('regras')
                .setDescription('Adiciona bot√£o de verifica√ß√£o ao canal de regras')
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('stats')
                .setDescription('Mostra estat√≠sticas de verifica√ß√£o')
        )
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageRoles),

    async execute(interaction) {
        const subcommand = interaction.options.getSubcommand();

        if (subcommand === 'setup') {
            const channel = interaction.options.getChannel('canal');
            const VERIFICATION_CHANNEL_ID = process.env.VERIFICATION_CHANNEL_ID || '1401005726847209604';
            const targetChannel = channel || interaction.guild.channels.cache.get(VERIFICATION_CHANNEL_ID);

            if (!targetChannel) {
                await interaction.reply({
                    content: '‚ùå Canal de verifica√ß√£o n√£o encontrado!',
                    ephemeral: true
                });
                return;
            }

            // Embed principal do sistema de verifica√ß√£o
            const verificationEmbed = new EmbedBuilder()
                .setColor('#00ff00')
                .setTitle('üõ°Ô∏è Sistema de Verifica√ß√£o - ASKAL')
                .setDescription(
                    '**Bem-vindo ao servidor ASKAL!**\n\n' +
                    'üèùÔ∏è Para ter acesso completo ao servidor, voc√™ deve:\n\n' +
                    '**üìã PASSO 1:** Leia atentamente todas as regras em <#1401005418632843364>\n' +
                    '**‚úÖ PASSO 2:** Clique no bot√£o "Li e aceito as regras" ao final das regras\n' +
                    '**üéÆ PASSO 3:** Aguarde receber o cargo de verificado automaticamente\n\n' +
                    '‚ö†Ô∏è **IMPORTANTE:**\n' +
                    '‚Ä¢ Voc√™ deve ler TODAS as regras antes de clicar\n' +
                    '‚Ä¢ O n√£o cumprimento das regras resultar√° em puni√ß√µes\n' +
                    '‚Ä¢ Este processo √© obrigat√≥rio para todos os membros\n\n' +
                    'üé≠ **Sobre o servidor:**\n' +
                    '‚Ä¢ Mapa: Deerisle\n' +
                    '‚Ä¢ Foco: Roleplay realista\n' +
                    '‚Ä¢ Comunidade: BR/PT'
                )
                .addFields(
                    {
                        name: 'üìñ Regras do Servidor',
                        value: 'Acesse: <#1401005418632843364>',
                        inline: true
                    },
                    {
                        name: 'üé´ Suporte',
                        value: 'Use: <#1401007022958448752>',
                        inline: true
                    },
                    {
                        name: 'üëã Boas-vindas',
                        value: 'Veja: <#1401005523859673129>',
                        inline: true
                    }
                )
                .setThumbnail(interaction.guild.iconURL({ dynamic: true }))
                .setFooter({
                    text: 'ASKAL ‚Ä¢ Sistema de Verifica√ß√£o',
                    iconURL: interaction.guild.iconURL()
                })
                .setTimestamp();

            try {
                await targetChannel.send({
                    embeds: [verificationEmbed]
                });

                await interaction.reply({
                    content: `‚úÖ Sistema de verifica√ß√£o configurado em ${targetChannel}!\n\n**Pr√≥ximo passo:** Use \`/verificacao regras\` no canal de regras para adicionar o bot√£o de verifica√ß√£o.`,
                    ephemeral: true
                });

            } catch (error) {
                console.error('Erro ao configurar verifica√ß√£o:', error);
                await interaction.reply({
                    content: '‚ùå Erro ao configurar o sistema de verifica√ß√£o!',
                    ephemeral: true
                });
            }

        } else if (subcommand === 'regras') {
            const RULES_CHANNEL_ID = process.env.RULES_CHANNEL_ID || '1401005418632843364';
            const rulesChannel = interaction.guild.channels.cache.get(RULES_CHANNEL_ID);

            if (!rulesChannel) {
                await interaction.reply({
                    content: '‚ùå Canal de regras n√£o encontrado!',
                    ephemeral: true
                });
                return;
            }

            // Embed para ser adicionado ao final das regras
            const rulesVerificationEmbed = new EmbedBuilder()
                .setColor('#ff6b35')
                .setTitle('‚úÖ Confirma√ß√£o de Leitura das Regras')
                .setDescription(
                    '**üéØ Voc√™ chegou ao final das regras!**\n\n' +
                    'üìñ Se voc√™ leu e compreendeu todas as regras acima, clique no bot√£o abaixo para confirmar.\n\n' +
                    '‚ö†Ô∏è **ATEN√á√ÉO:**\n' +
                    '‚Ä¢ Ao clicar, voc√™ confirma que leu e aceita todas as regras\n' +
                    '‚Ä¢ Voc√™ ser√° responsabilizado por qualquer quebra de regra\n' +
                    '‚Ä¢ O cargo de verificado ser√° adicionado automaticamente\n\n' +
                    'üéÆ **Ap√≥s a verifica√ß√£o voc√™ ter√° acesso a:**\n' +
                    '‚Ä¢ Canais de chat geral\n' +
                    '‚Ä¢ Sistema de tickets\n' +
                    '‚Ä¢ Canais de informa√ß√µes do servidor\n' +
                    '‚Ä¢ Eventos e atividades'
                )
                .setFooter({
                    text: 'ASKAL ‚Ä¢ Verifica√ß√£o de Regras',
                    iconURL: interaction.guild.iconURL()
                })
                .setTimestamp();

            // Bot√£o de verifica√ß√£o
            const verificationButton = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('verify_rules')
                        .setLabel('‚úÖ Li e aceito as regras')
                        .setStyle(ButtonStyle.Success)
                        .setEmoji('üìñ')
                );

            try {
                await rulesChannel.send({
                    embeds: [rulesVerificationEmbed],
                    components: [verificationButton]
                });

                await interaction.reply({
                    content: `‚úÖ Bot√£o de verifica√ß√£o adicionado ao canal ${rulesChannel}!\n\nOs usu√°rios agora podem clicar para receber o cargo de verificado.`,
                    ephemeral: true
                });

            } catch (error) {
                console.error('Erro ao adicionar bot√£o de verifica√ß√£o:', error);
                await interaction.reply({
                    content: '‚ùå Erro ao adicionar o bot√£o de verifica√ß√£o!',
                    ephemeral: true
                });
            }

        } else if (subcommand === 'stats') {
            const VERIFIED_ROLE_ID = process.env.VERIFIED_ROLE_ID || '1401003696518856786';
            const verifiedRole = interaction.guild.roles.cache.get(VERIFIED_ROLE_ID);

            if (!verifiedRole) {
                await interaction.reply({
                    content: '‚ùå Cargo de verificado n√£o encontrado!',
                    ephemeral: true
                });
                return;
            }

            const totalMembers = interaction.guild.memberCount;
            const verifiedMembers = verifiedRole.members.size;
            const unverifiedMembers = totalMembers - verifiedMembers;
            const verificationRate = ((verifiedMembers / totalMembers) * 100).toFixed(1);

            const statsEmbed = new EmbedBuilder()
                .setColor('#0099ff')
                .setTitle('üìä Estat√≠sticas de Verifica√ß√£o')
                .setDescription('Dados atuais do sistema de verifica√ß√£o do servidor')
                .addFields(
                    {
                        name: 'üë• Total de Membros',
                        value: totalMembers.toString(),
                        inline: true
                    },
                    {
                        name: '‚úÖ Verificados',
                        value: verifiedMembers.toString(),
                        inline: true
                    },
                    {
                        name: '‚ùå N√£o Verificados',
                        value: unverifiedMembers.toString(),
                        inline: true
                    },
                    {
                        name: 'üìà Taxa de Verifica√ß√£o',
                        value: `${verificationRate}%`,
                        inline: true
                    },
                    {
                        name: 'üé≠ Cargo Verificado',
                        value: verifiedRole.toString(),
                        inline: true
                    },
                    {
                        name: 'üìÖ √öltima Atualiza√ß√£o',
                        value: `<t:${Math.floor(Date.now() / 1000)}:R>`,
                        inline: true
                    }
                )
                .setThumbnail(interaction.guild.iconURL())
                .setFooter({
                    text: 'ASKAL ‚Ä¢ Sistema de Verifica√ß√£o',
                    iconURL: interaction.guild.iconURL()
                })
                .setTimestamp();

            await interaction.reply({ embeds: [statsEmbed] });
        }
    },
};
